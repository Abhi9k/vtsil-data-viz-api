const margin = {top: 50, right: 50, bottom: 50, left: 50};

const svg = d3.select("svg");
const width = +svg.attr("width") - margin.left - margin.right;
const height = +svg.attr("height") - margin.top - margin.bottom;

const vis1 = d3.select("#floor1").select("svg").append("g").attr("stroke","black");
// .attr("transform", `translate(${margin.left},${margin.top})`);

const vis2 = d3.select("#floor2").select("svg").append("g").attr("stroke","black");
const vis3 = d3.select("#floor3").select("svg").append("g").attr("stroke","black");
const vis4 = d3.select("#floor4").select("svg").append("g").attr("stroke","black");
// .attr("transform", `translate(${margin.left},${margin.top})`);
floormap_data=[[['0', '0'], ['11.14', '0']],
 [['11.14', '0'], ['11.14', '3.79']],
 [['11.14', '3.79'], ['17.33', '3.79']],
 [['17.33', '3.79'], ['43.16', '3.59']],
 [['43.16', '3.59'], ['49.57', '3.59']],
 [['49.57', '3.59'], ['49.57', '32.09']],
 [['49.57', '32.09'], ['34.27', '32.21']],
 [['34.27', '32.21'], ['34.27', '36.13']],
 [['34.27', '36.13'], ['11.14', '36.13']],
 [['11.14', '36.13'], ['11.14', '38.22']],
 [['11.14', '38.22'], ['-27.58', '38.22']],
 [['-27.58', '38.22'], ['-26.23', '-26.1']],
 [['-26.23', '-26.1'], ['-13.19', '-26.1']],
 [['-13.19', '-26.1'], ['-13.19', '-19.85']],
 [['-13.19', '-19.85'], ['-0.15', '-19.85']],
 [['-0.15', '-19.85'], ['0', '0']],
 [['0', '0'], ['11.14', '0']],
 [['11.14', '0'], ['11.14', '3.79']],
 [['11.14', '3.79'], ['17.33', '3.79']],
 [['17.33', '3.79'], ['43.16', '3.59']],
 [['43.16', '3.59'], ['49.57', '3.59']],
 [['49.57', '3.59'], ['49.57', '32.21']],
 [['49.57', '32.21'], ['34.27', '32.21']],
 [['34.27', '32.21'], ['34.27', '36.13']],
 [['34.27', '36.13'], ['11.14', '36.13']],
 [['11.14', '36.13'], ['11.14', '38.22']],
 [['11.14', '38.22'], ['-27.58', '38.22']],
 [['-27.58', '38.22'], ['-26.23', '-26.1']],
 [['-26.23', '-26.1'], ['-13.19', '-26.1']],
 [['-13.19', '-26.1'], ['-13.19', '-19.85']],
 [['-13.19', '-19.85'], ['-0.15', '-19.85']],
 [['0', '0'], ['0', '0']],
 [['11.14', '0'], ['11.14', '0']],
 [['11.14', '3.79'], ['11.14', '3.79']],
 [['17.33', '3.79'], ['17.33', '3.79']],
 [['43.16', '3.59'], ['43.16', '3.59']],
 [['49.57', '3.59'], ['49.57', '3.59']],
 [['49.57', '32.09'], ['49.57', '32.21']],
 [['34.27', '32.21'], ['34.27', '32.21']],
 [['34.27', '36.13'], ['34.27', '36.13']],
 [['11.14', '36.13'], ['11.14', '36.13']],
 [['11.14', '38.22'], ['11.14', '38.22']],
 [['-27.58', '38.22'], ['-27.58', '38.22']],
 [['-26.23', '-26.1'], ['-26.23', '-26.1']],
 [['-13.19', '-26.1'], ['-13.19', '-26.1']],
 [['-13.19', '-19.85'], ['-13.19', '-19.85']],
 [['-0.15', '-19.85'], ['-0.15', '-19.85']],
 [['-0.15', '-19.85'], ['0', '0']],
 [['0', '0'], ['11.14', '0']],
 [['11.14', '0'], ['11.14', '3.79']],
 [['11.14', '3.79'], ['17.33', '3.79']],
 [['17.33', '3.79'], ['43.16', '3.59']],
 [['43.16', '3.59'], ['49.57', '3.59']],
 [['49.57', '3.59'], ['49.57', '32.21']],
 [['49.57', '32.21'], ['34.27', '32.21']],
 [['34.27', '32.21'], ['34.27', '36.13']],
 [['34.27', '36.13'], ['11.14', '36.13']],
 [['11.14', '36.13'], ['11.14', '38.22']],
 [['11.14', '38.22'], ['-27.58', '38.22']],
 [['-27.58', '38.22'], ['-26.23', '-26.1']],
 [['-26.23', '-26.1'], ['-13.19', '-26.1']],
 [['-13.19', '-26.1'], ['-13.19', '-19.85']],
 [['-13.19', '-19.85'], ['-0.15', '-19.85']],
 [['-0.15', '-19.85'], ['0', '0']],
 [['0', '0'], ['0', '0']],
 [['11.14', '0'], ['11.14', '0']],
 [['11.14', '3.79'], ['11.14', '3.79']],
 [['17.33', '3.79'], ['17.33', '3.79']],
 [['43.16', '3.59'], ['43.16', '3.59']],
 [['49.57', '3.59'], ['49.57', '3.59']],
 [['49.57', '32.21'], ['49.57', '32.21']],
 [['34.27', '32.21'], ['34.27', '32.21']],
 [['34.27', '36.13'], ['34.27', '36.13']],
 [['11.14', '36.13'], ['11.14', '36.13']],
 [['11.14', '38.22'], ['11.14', '38.22']],
 [['-27.58', '38.22'], ['-27.58', '38.22']],
 [['-26.23', '-26.1'], ['-26.23', '-26.1']],
 [['-13.19', '-26.1'], ['-13.19', '-26.1']],
 [['-13.19', '-19.85'], ['-13.19', '-19.85']],
 [['-0.15', '-19.85'], ['-0.15', '-19.85']],
 [['-8', '3.59'], ['-8', '3.59']],
 [['-20.95', '14.01'], ['-20.95', '14.01']],
 [['-20.95', '-15'], ['-20.95', '-15']],
 [['-27.49', '14.01'], ['-27.49', '14.01']],
 [['-8', '-15'], ['-8', '-15']],
 [['-8', '3.59'], ['17.33', '3.79']],
 [['17.33', '3.79'], ['43.16', '3.59']],
 [['43.16', '3.59'], ['49.57', '3.59']],
 [['49.57', '3.59'], ['49.75', '32.21']],
 [['49.75', '32.21'], ['34.27', '32.21']],
 [['34.27', '32.21'], ['34.27', '36.13']],
 [['34.27', '36.13'], ['10.85', '35.94']],
 [['10.85', '35.94'], ['11.14', '38.22']],
 [['11.14', '38.22'], ['-27.58', '38.22']],
 [['-27.58', '38.22'], ['-27.49', '14.01']],
 [['-27.49', '14.01'], ['-20.95', '14.01']],
 [['-20.95', '-7'], ['-20.95', '-15']],
 [['-20.95', '-15'], ['-8', '-15']],
 [['-8', '-7'], ['-8', '3.59']],
 [['17.33', '3.79'], ['17.33', '3.79']],
 [['43.16', '3.59'], ['43.16', '3.59']],
 [['49.57', '3.59'], ['49.57', '3.59']],
 [['49.57', '32.21'], ['49.75', '32.21']],
 [['34.27', '32.21'], ['34.27', '32.21']],
 [['34.27', '36.13'], ['34.27', '36.13']],
 [['11.14', '36.13'], ['10.85', '35.94']],
 [['11.14', '38.22'], ['11.14', '38.22']],
 [['-27.58', '38.22'], ['-27.58', '38.22']],
 [['17.158', '11.973'], ['36.364', '11.867']],
 [['36.364', '11.867'], ['36.364', '25.379']],
 [['36.364', '25.379'], ['-3.791', '25.379']],
 [['-3.791', '25.379'], ['-14.126', '25.44']],
 [['-14.126', '25.44'], ['-14.126', '31.979']],
 [['-14.126', '31.979'], ['-22.379', '31.979']],
 [['-22.379', '31.979'], ['-22.379', '16']],
 [['-22.379', '16'], ['-2.6105', '13.9865']],
 [['17.158', '11.973'], ['17.158', '11.973']],
 [['36.364', '11.867'], ['36.364', '11.867']],
 [['36.364', '25.379'], ['36.364', '25.379']],
 [['-3.791', '25.379'], ['-3.791', '25.379']],
 [['-14.126', '25.44'], ['-14.126', '25.44']],
 [['-14.126', '31.979'], ['-14.126', '31.979']],
 [['-22.379', '31.979'], ['-22.379', '31.979']],
 [['-22.379', '16'], ['-22.379', '16']],
 [['-20.95', '14.01'], ['-20.95', '-7']],
 [['-8', '-15'], ['-8', '-7']],
 [['-2.6105', '13.9865'], ['17.158', '11.973']],
 [['0', '0'], ['0', '0']],
 [['11.14', '0'], ['11.14', '0']],
 [['11.14', '3.79'], ['11.14', '3.79']],
 [['17.33', '3.79'], ['17.33', '3.79']],
 [['43.16', '3.59'], ['43.16', '3.59']],
 [['49.57', '3.59'], ['49.57', '3.59']],
 [['49.57', '32.09'], ['49.57', '32.09']],
 [['34.27', '32.21'], ['34.27', '32.21']],
 [['34.27', '36.13'], ['34.27', '36.13']],
 [['11.14', '36.13'], ['11.14', '36.13']],
 [['11.14', '38.22'], ['11.14', '38.22']],
 [['-27.58', '38.22'], ['-27.58', '38.22']],
 [['-26.23', '-26.1'], ['-26.23', '-26.1']],
 [['-13.19', '-26.1'], ['-13.19', '-26.1']],
 [['-13.19', '-19.85'], ['-13.19', '-19.85']],
 [['-0.15', '-19.85'], ['-0.15', '-19.85']]];

sensor_locations=[[1, -28.366, -28.537, 5.362], [2, -28.366, -28.537, 5.362], [3, -28.366, -28.537, 5.362], [4, -0.581, -19.413, 5.497], [5, -21.537, 3.14, 5.412], [6, -21.537, 3.14, 5.412], [7, -21.537, 3.14, 5.412], [8, -27.818, 38.645, 4.722], [9, -27.818, 38.645, 4.722], [10, -14.277, 32.185, 5.297], [11, -27.818, 38.645, 4.722], [12, -21.133, -9.647, 5.427], [13, -6.883, -16.185, 5.417], [14, -9.616, -3.38, 5.382], [15, 42.766, 4.084, 10.161], [16, 42.766, 4.084, 10.161], [17, 42.766, 4.084, 10.161], [18, 17.168, 4.969, 10.001], [19, 17.168, 4.969, 10.001], [20, 17.168, 4.969, 10.001], [21, 20.495, 26.227, 9.996], [22, 17.158, 11.973, 19.112], [23, 36.364, 11.867, 20.083], [24, 36.364, 11.867, 20.083], [25, 21.458, 16.172, 22.057], [26, 21.458, 16.172, 22.057], [27, 17.158, 11.973, 19.112], [28, -14.277, 32.185, 5.297], [29, 34.229, 15.926, 21.932], [30, 30.402, 32.224, 0.85], [31, 33.338, 33.558, 1.0], [32, 30.132, 33.839, 0.855], [33, 32.027, 26.336, -0.045], [34, 33.262, 25.235, 0.865], [35, 34.272, 32.215, 0.86], [36, 11.226, 36.107, 4.412], [37, 11.226, 36.107, 4.412], [38, 41.276, 26.274, 0.85], [39, 49.462, 32.208, 4.851], [40, 49.462, 32.208, 4.851], [41, 49.462, 32.208, 4.851], [42, 11.226, 36.107, 4.412], [43, 42.685, 3.754, 4.857], [44, 42.685, 3.754, 4.857], [45, -27.579, 38.2236, 0.729], [46, -27.579, 38.2236, 0.729], [47, -13.188, 32.167, 0.73], [48, -13.188, 32.167, 0.73], [49, -0.005, -0.448, 4.867], [50, -0.005, -0.448, 4.867], [51, -0.005, -0.448, 4.867], [52, -0.581, -19.413, 5.497], [53, -0.581, -19.413, 5.497], [54, 13.942, 10.367, 5.392], [55, 26.787, 13.09, 5.417], [56, 0.099, 3.952, 9.921], [57, 33.247, 23.577, 0.855], [58, 39.666, 25.083, 0.845], [59, 39.643, 23.57, 0.835], [60, 29.959, 12.62, 0.34], [61, 42.685, 3.754, 4.857], [62, 17.096, 4.236, 5.452], [63, 17.096, 4.236, 5.452], [64, 17.096, 4.236, 5.452], [65, 20.444, 21.364, 5.407], [66, 20.444, 21.364, 5.407], [67, 20.444, 21.364, 5.407], [68, -0.38, 16.037, 9.839], [69, -0.302, 21.905, 9.816], [70, -0.304, 18.963, 9.826], [71, -0.327, 29.349, 9.851], [72, -0.316, 26.601, 9.831], [73, -2.483, 21.921, 9.811], [74, -2.456, 29.36, 9.836], [75, -2.487, 26.613, 9.826], [76, 34.229, 15.926, 21.932], [77, -27.488, 39.031, 13.855], [78, 10.852, 35.941, 13.82], [79, 20.516, 31.403, 9.981], [80, 20.509, 32.086, 9.981], [81, 23.683, 30.602, 10.001], [82, 23.702, 31.387, 9.996], [83, 17.305, 30.649, 9.966], [84, 17.326, 32.063, 9.941], [85, 20.504, 30.611, 9.981], [86, 10.852, 35.941, 13.82], [87, 17.158, 11.973, 19.112], [88, -7.639, -16.236, 9.896], [89, -9.532, -3.708, 10.096], [90, -27.76, 38.492, 9.236], [91, -19.338, 0.451, 10.116], [92, -19.338, 0.451, 10.116], [93, -17.143, -9.671, 9.956], [94, -19.338, 0.451, 10.116], [95, 1.4, 3.952, 9.911], [96, 8.212, 28.375, 9.811], [97, 8.253, 29.481, 9.886], [98, 5.586, 31.554, 9.876], [99, 14.106, 31.447, 9.981], [100, 8.283, 31.496, 9.876], [101, 10.866, 31.362, 9.918], [102, 2.912, 30.534, 9.886], [103, 2.903, 31.584, 9.891], [104, 30.098, 30.682, 9.811], [105, 20.495, 26.227, 9.996], [106, 20.495, 26.227, 9.996], [107, 30.084, 32.075, 9.811], [108, 30.094, 31.326, 9.811], [109, 33.18, 19.699, 14.535], [110, 20.4, 20.061, 14.52], [111, 20.4, 20.061, 14.52], [112, 20.4, 20.061, 14.52], [113, 36.364, 11.867, 20.083], [114, 26.72, 14.093, 14.525], [115, 13.927, 14.778, 14.495], [116, 6.371, 3.92, 9.906], [117, 0.28, -0.235, 9.221], [118, 0.28, -0.235, 9.221], [119, 0.28, -0.235, 9.221], [120, -0.579, -19.376, 9.236], [121, 1.697, -28.643, 9.236], [122, -0.579, -19.376, 9.236], [123, -0.579, -19.376, 9.236], [124, 41.627, 26.548, 9.966], [125, 41.627, 26.548, 9.966], [126, 1.697, -28.643, 9.236], [127, 1.697, -28.643, 9.236], [128, 36.349, 4.185, 10.051], [129, 23.554, 4.282, 10.136], [130, 29.936, 4.211, 10.216], [131, 2.911, 29.53, 9.896], [132, 0.295, 31.652, 9.866], [133, 6.037, 15.753, 10.116], [134, 6.037, 15.753, 10.116], [135, 6.037, 15.753, 10.116], [136, -22.379, 31.979, 19.517], [137, 41.627, 26.548, 9.966], [138, -3.791, 25.379, 19.497], [139, -3.791, 25.379, 19.497], [140, -22.379, 31.979, 19.517], [141, -14.126, 25.44, 19.507], [142, -14.126, 25.44, 19.507], [143, -14.126, 25.44, 19.507], [144, -3.791, 25.379, 19.497], [145, 48.9637, 34.222, 13.796], [146, 48.9637, 34.222, 13.796], [147, 48.9637, 34.222, 13.796], [148, 42.571, 3.486, 13.915], [149, 42.571, 3.486, 13.915], [150, 42.571, 3.486, 13.915], [151, 16.997, 4.297, 14.61], [152, 16.997, 4.297, 14.61], [153, 16.997, 4.297, 14.61], [154, -22.379, 31.979, 19.517], [155, -14.33, 32.172, 9.236], [156, -27.76, 38.492, 9.236], [157, -14.33, 32.172, 9.236], [158, -27.76, 38.492, 9.236], [159, -26.2272, -26.1048, 0.379], [160, -26.2272, -26.1048, 0.379], [161, -26.2272, -26.1048, 0.379], [162, -0.151, -19.849, 0.375], [163, -0.151, -19.849, 0.375], [164, -0.151, -19.849, 0.375], [165, 49.57, 32.093, -0.1], [166, 49.57, 32.093, -0.1], [167, 43.161, 3.594, 0.465], [168, 49.57, 32.093, -0.1], [169, 11.1386, 36.1319, -0.34003], [170, 11.1386, 36.1319, -0.34003], [171, 11.1386, 36.1319, -0.34003], [172, 43.161, 3.594, 0.465], [173, 43.161, 3.594, 0.465], [174, -27.488, 39.031, 13.855], [175, -27.488, 39.031, 13.855], [176, 10.771, 4.942, 10.051], [177, -13.561, 32.568, 13.635], [178, -13.561, 32.568, 13.635], [179, 10.852, 35.941, 13.82], [180, -0.32, 16.015, 9.836], [181, 10.715, 36.127, 8.996], [182, 10.715, 36.127, 8.996], [183, 10.715, 36.127, 8.996], [184, 48.9637, 34.222, 9.236], [185, 48.9637, 34.222, 9.236], [186, 48.9637, 34.222, 9.236], [187, -9.8476, 12.8672, 0.379], [188, -9.8476, 12.8672, 0.379], [189, -9.8476, 12.8672, 0.379], [190, -10.9272, -3.349, 0.379], [191, -10.9272, -3.349, 0.379], [192, -10.9272, -3.349, 0.379], [193, -27.579, 38.2236, 0.729], [194, 17.33, 3.793, -0.015], [195, 17.33, 3.793, -0.015], [196, 17.33, 3.793, -0.015], [197, 13.967, 13.844, 0.76]];

first_floor_sensor_locations=[[30, "1", 30.402, 32.224, 0.85], [31, "1", 33.338, 33.558, 1.0], [32, "1", 30.132, 33.839, 0.855], [33, "1", 32.027, 26.336, -0.045], [34, "1", 33.262, 25.235, 0.865], [35, "1", 34.272, 32.215, 0.86], [38, "1", 41.276, 26.274, 0.85], [45, "1", -27.579, 38.2236, 0.729], [46, "1", -27.579, 38.2236, 0.729], [47, "1", -13.188, 32.167, 0.73], [48, "1", -13.188, 32.167, 0.73], [57, "1", 33.247, 23.577, 0.855], [58, "1", 39.666, 25.083, 0.845], [59, "1", 39.643, 23.57, 0.835], [60, "1", 29.959, 12.62, 0.34], [159, "1", -26.2272, -26.1048, 0.379], [160, "1", -26.2272, -26.1048, 0.379], [161, "1", -26.2272, -26.1048, 0.379], [162, "1", -0.151, -19.849, 0.375], [163, "1", -0.151, -19.849, 0.375], [164, "1", -0.151, -19.849, 0.375], [165, "1", 49.57, 32.093, -0.1], [166, "1", 49.57, 32.093, -0.1], [167, "1", 43.161, 3.594, 0.465], [168, "1", 49.57, 32.093, -0.1], [169, "1", 11.1386, 36.1319, -0.34003], [170, "1", 11.1386, 36.1319, -0.34003], [171, "1", 11.1386, 36.1319, -0.34003], [172, "1", 43.161, 3.594, 0.465], [173, "1", 43.161, 3.594, 0.465], [187, "1", -9.8476, 12.8672, 0.379], [188, "1", -9.8476, 12.8672, 0.379], [189, "1", -9.8476, 12.8672, 0.379], [190, "1", -10.9272, -3.349, 0.379], [191, "1", -10.9272, -3.349, 0.379], [192, "1", -10.9272, -3.349, 0.379], [193, "1", -27.579, 38.2236, 0.729], [194, "1", 17.33, 3.793, -0.015], [195, "1", 17.33, 3.793, -0.015], [196, "1", 17.33, 3.793, -0.015], [197, "1", 13.967, 13.844, 0.76]];
second_floor_sensor_locations=[[1, "2", -28.366, -28.537, 5.362], [2, "2", -28.366, -28.537, 5.362], [3, "2", -28.366, -28.537, 5.362], [4, "2", -0.581, -19.413, 5.497], [5, "2", -21.537, 3.14, 5.412], [6, "2", -21.537, 3.14, 5.412], [7, "2", -21.537, 3.14, 5.412], [8, "2", -27.818, 38.645, 4.722], [9, "2", -27.818, 38.645, 4.722], [10, "2", -14.277, 32.185, 5.297], [11, "2", -27.818, 38.645, 4.722], [12, "2", -21.133, -9.647, 5.427], [13, "2", -6.883, -16.185, 5.417], [14, "2", -9.616, -3.38, 5.382], [28, "2", -14.277, 32.185, 5.297], [36, "2", 11.226, 36.107, 4.412], [37, "2", 11.226, 36.107, 4.412], [39, "2", 49.462, 32.208, 4.851], [40, "2", 49.462, 32.208, 4.851], [41, "2", 49.462, 32.208, 4.851], [42, "2", 11.226, 36.107, 4.412], [43, "2", 42.685, 3.754, 4.857], [44, "2", 42.685, 3.754, 4.857], [49, "2", -0.005, -0.448, 4.867], [50, "2", -0.005, -0.448, 4.867], [51, "2", -0.005, -0.448, 4.867], [52, "2", -0.581, -19.413, 5.497], [53, "2", -0.581, -19.413, 5.497], [54, "2", 13.942, 10.367, 5.392], [55, "2", 26.787, 13.09, 5.417], [61, "2", 42.685, 3.754, 4.857], [62, "2", 17.096, 4.236, 5.452], [63, "2", 17.096, 4.236, 5.452], [64, "2", 17.096, 4.236, 5.452], [65, "2", 20.444, 21.364, 5.407], [66, "2", 20.444, 21.364, 5.407], [67, "2", 20.444, 21.364, 5.407]];
third_floor_sensor_locations=[[15, "3", 42.766, 4.084, 10.161], [16, "3", 42.766, 4.084, 10.161], [17, "3", 42.766, 4.084, 10.161], [18, "3", 17.168, 4.969, 10.001], [19, "3", 17.168, 4.969, 10.001], [20, "3", 17.168, 4.969, 10.001], [21, "3", 20.495, 26.227, 9.996], [56, "3", 0.099, 3.952, 9.921], [68, "3", -0.38, 16.037, 9.839], [69, "3", -0.302, 21.905, 9.816], [70, "3", -0.304, 18.963, 9.826], [71, "3", -0.327, 29.349, 9.851], [72, "3", -0.316, 26.601, 9.831], [73, "3", -2.483, 21.921, 9.811], [74, "3", -2.456, 29.36, 9.836], [75, "3", -2.487, 26.613, 9.826], [79, "3", 20.516, 31.403, 9.981], [80, "3", 20.509, 32.086, 9.981], [81, "3", 23.683, 30.602, 10.001], [82, "3", 23.702, 31.387, 9.996], [83, "3", 17.305, 30.649, 9.966], [84, "3", 17.326, 32.063, 9.941], [85, "3", 20.504, 30.611, 9.981], [88, "3", -7.639, -16.236, 9.896], [89, "3", -9.532, -3.708, 10.096], [90, "3", -27.76, 38.492, 9.236], [91, "3", -19.338, 0.451, 10.116], [92, "3", -19.338, 0.451, 10.116], [93, "3", -17.143, -9.671, 9.956], [94, "3", -19.338, 0.451, 10.116], [95, "3", 1.4, 3.952, 9.911], [96, "3", 8.212, 28.375, 9.811], [97, "3", 8.253, 29.481, 9.886], [98, "3", 5.586, 31.554, 9.876], [99, "3", 14.106, 31.447, 9.981], [100, "3", 8.283, 31.496, 9.876], [101, "3", 10.866, 31.362, 9.918], [102, "3", 2.912, 30.534, 9.886], [103, "3", 2.903, 31.584, 9.891], [104, "3", 30.098, 30.682, 9.811], [105, "3", 20.495, 26.227, 9.996], [106, "3", 20.495, 26.227, 9.996], [107, "3", 30.084, 32.075, 9.811], [108, "3", 30.094, 31.326, 9.811], [116, "3", 6.371, 3.92, 9.906], [117, "3", 0.28, -0.235, 9.221], [118, "3", 0.28, -0.235, 9.221], [119, "3", 0.28, -0.235, 9.221], [120, "3", -0.579, -19.376, 9.236], [121, "3", 1.697, -28.643, 9.236], [122, "3", -0.579, -19.376, 9.236], [123, "3", -0.579, -19.376, 9.236], [124, "3", 41.627, 26.548, 9.966], [125, "3", 41.627, 26.548, 9.966], [126, "3", 1.697, -28.643, 9.236], [127, "3", 1.697, -28.643, 9.236], [128, "3", 36.349, 4.185, 10.051], [129, "3", 23.554, 4.282, 10.136], [130, "3", 29.936, 4.211, 10.216], [131, "3", 2.911, 29.53, 9.896], [132, "3", 0.295, 31.652, 9.866], [133, "3", 6.037, 15.753, 10.116], [134, "3", 6.037, 15.753, 10.116], [135, "3", 6.037, 15.753, 10.116], [137, "3", 41.627, 26.548, 9.966], [155, "3", -14.33, 32.172, 9.236], [156, "3", -27.76, 38.492, 9.236], [157, "3", -14.33, 32.172, 9.236], [158, "3", -27.76, 38.492, 9.236], [176, "3", 10.771, 4.942, 10.051], [180, "3", -0.32, 16.015, 9.836], [181, "3", 10.715, 36.127, 8.996], [182, "3", 10.715, 36.127, 8.996], [183, "3", 10.715, 36.127, 8.996], [184, "3", 48.9637, 34.222, 9.236], [185, "3", 48.9637, 34.222, 9.236], [186, "3", 48.9637, 34.222, 9.236]];
fourth_floor_sensor_locations=[[77, "4", -27.488, 39.031, 13.855], [78, "4", 10.852, 35.941, 13.82], [86, "4", 10.852, 35.941, 13.82], [109, "4", 33.18, 19.699, 14.535], [110, "4", 20.4, 20.061, 14.52], [111, "4", 20.4, 20.061, 14.52], [112, "4", 20.4, 20.061, 14.52], [114, "4", 26.72, 14.093, 14.525], [115, "4", 13.927, 14.778, 14.495], [145, "4", 48.9637, 34.222, 13.796], [146, "4", 48.9637, 34.222, 13.796], [147, "4", 48.9637, 34.222, 13.796], [148, "4", 42.571, 3.486, 13.915], [149, "4", 42.571, 3.486, 13.915], [150, "4", 42.571, 3.486, 13.915], [151, "4", 16.997, 4.297, 14.61], [152, "4", 16.997, 4.297, 14.61], [153, "4", 16.997, 4.297, 14.61], [174, "4", -27.488, 39.031, 13.855], [175, "4", -27.488, 39.031, 13.855], [177, "4", -13.561, 32.568, 13.635], [178, "4", -13.561, 32.568, 13.635], [179, "4", 10.852, 35.941, 13.82]];
fifth_floor_sensor_locations=[[22, "5", 17.158, 11.973, 19.112], [23, "5", 36.364, 11.867, 20.083], [24, "5", 36.364, 11.867, 20.083], [25, "5", 21.458, 16.172, 22.057], [26, "5", 21.458, 16.172, 22.057], [27, "5", 17.158, 11.973, 19.112], [29, "5", 34.229, 15.926, 21.932], [76, "5", 34.229, 15.926, 21.932], [87, "5", 17.158, 11.973, 19.112], [113, "5", 36.364, 11.867, 20.083], [136, "5", -22.379, 31.979, 19.517], [138, "5", -3.791, 25.379, 19.497], [139, "5", -3.791, 25.379, 19.497], [140, "5", -22.379, 31.979, 19.517], [141, "5", -14.126, 25.44, 19.507], [142, "5", -14.126, 25.44, 19.507], [143, "5", -14.126, 25.44, 19.507], [144, "5", -3.791, 25.379, 19.497], [154, "5", -22.379, 31.979, 19.517]];
// .attr("class", "content")
// .attr("width", width)
// .attr("height", height);

// const xScale = d3.scaleLinear()
// .domain([margin.left, margin.left + width])
// .range([0, width]);

// const yScale = d3.scaleLinear()
// .domain([margin.top, margin.top + height])
// .range([0, height]);

// draw a circle
// vis.append("circle")
// 	.attr("cx",width/2)
// 	.attr("cy",height/2)
// 	.attr("r",20);

// draw a circle without fill
// vis.append("circle")
// 	.attr("cx",width/2)
// 	.attr("cy",height/2)
// 	.attr("fill","white")
// 	.attr("r",20);
// draw a two overlappint circles with color
// vis.append("circle")
// 	.attr("cx",width/2-10)
// 	.attr("cy",height/2)
// 	.attr("fill","red")
// 	.attr("fill-opacity","0.5")
// 	.attr("r",20)
// 	.attr("stroke-opacity","0.5")
// 	.attr("stroke","black");
// vis.append("circle")
// 	.attr("cx",width/2+10)
// 	.attr("cy",height/2)
// 	.attr("fill","blue")
// 	.attr("fill-opacity","0.5")
// 	.attr("r",20)
// 	.attr("stroke-opacity","0.5")
// 	.attr("stroke","black");

// draw equidistant circles
// var x=d3.range(10,width,20);
// var y=d3.range(10,height,20);
// var data=d3.zip(x,y);
// vis.selectAll("circle")
// 	.data(data).enter()
// 	.append("circle")
// 	.attr("cx",d=>d[0])
// 	.attr("cy",d=>d[1])
// 	.attr("r",10)
// 	.attr("fill","steelblue")
// 	.attr("fill-opacity","0.6");

// draw a horizontal line with equally spaced small vertical lines
// vis.append("line")
// 	.attr("x1",0)
// 	.attr("y1",height/2)
// 	.attr("x2",width)
// 	.attr("y2",height/2)
// 	.attr("stroke","black")
// 	.attr("stroke-width",2)
// 	.attr("stroke-opacity","0.5");
// var x=d3.range(0,width,10);
// var y1=height/2-2;
// var y2=height/2+2;
// vis.selectAll("line")
// 	.data(x).enter().append("line")
// 		.attr("x1",d=>d)
// 		.attr("y1",y1)
// 		.attr("x2",d=>d)
// 		.attr("y2",y2)
// 		.attr("stroke","black")
// 		.attr("stroke-width",1);

// draw a polyline
// var x=[];
// d3.range(1,5).forEach(d=>x.push(d3.randomUniform(0,width)()));
// var y=[];
// d3.range(1,5).forEach(d=>y.push(d3.randomUniform(0,height)()));
// var data=d3.zip(x,y);
// var points=""
// data.forEach(function(d){points=points+" "+d[0]+","+d[1];});
// vis.append("polyline")
// 	.attr("stroke","black")
// 	.attr("stroke-opacity","0.7")
// 	.attr("points",points)
// 	.attr("fill","none");

// draw an octagon
// var points="0,50 10,40 24,40 34,50 34,60 24,70 10,70 0,60 0,50"
// vis.append("polyline")
// 	.attr("stroke","black")
// 	.attr("stroke-opacity","0.7")
// 	.attr("points", points)
// 	.attr("fill","none");

// draw a rectangle with rounded corner
// vis.append("rect")
// 	.attr("fill","none")
// 	.attr("x",10)
// 	.attr("y",10)
// 	.attr("width", 50)
// 	.attr("height",100)
// 	.attr("rx",20);

//draw a histogram
// var x=d3.range(0,width,30);
// var y=[];
// x.forEach(d=>y.push(d3.randomUniform(height/2+10,0)()));
// data=d3.zip(x,y);
// vis.selectAll("rect").data(data).enter().append("rect")
// 		.attr("x",d=>d[0])
// 		.attr("y",height/2)
// 		.attr("width",10)
// 		.attr("height",d=>(d[1]));

// draw a histogram with proper scale
// var x=d3.range(10,width,30);
// var y=[];
// var heightScale=d3.scaleLinear()
// 					.domain([0,10])
// 					.range([height/2,0]);
// var colorScale=d3.scaleLinear()
// 					.domain([0,height/4,height/2])
// 					.range(['black','grey','white']);
// x.forEach(d=>y.push(heightScale(d3.randomUniform(0,10)())));
// var data=d3.zip(x,y);
// vis.selectAll("rect").data(data).enter().append("rect")
// 		.attr("x",d=>d[0])
// 		.attr("y",d=>height/2-d[1])
// 		.attr("width",10)
// 		.attr("fill",d=>colorScale(d[1]))
// 		.attr("height",d=>d[1]);

// vis.append("line")
// 	.attr("x1",0)
// 	.attr("y1",height/2)
// 	.attr("x2",width)
// 	.attr("y2",height/2);
// var xAxis=d3.axisBottom(d3.scaleLinear().domain([0,width]).range([0,width])).ticks(5);
// var yAxis=d3.axisLeft(heightScale);
// vis.append("g").attr("transform","translate(0,"+height/2+")").call(xAxis);
// vis.append("g").call(yAxis);

// experiment mouseover and transition
// var x=d3.range(0,width,20);
// var y=d3.range(0,height,20);
// var z=20;
// var data=d3.cross(x,y);
// var colorScale=d3.scaleLinear()
// 					.domain([0,width])
// 					.range(["white","grey"]);
// vis.selectAll('rect').data(data).enter().append("rect")
// 		// .attr("x",d=>d[0])
// 		// .attr("y",d=>d[1])
// 		.attr("height",z)
// 		.attr("width",z)
// 		.attr("transform",translate)
// 		.attr("fill",d=>colorScale(d[0]))
// 		.on("mouseover",domagic);
// function translate(d){
// 	return "translate("+d[0]+","+d[1]+")";
// }
// function domagic(d) {
// 	// this.parentNode.appendChild(this);
// 	d3.select(this)
// 		.style("pointer-events","none")
// 		.transition()
// 			.duration(750)
// 			.attr("transform","translate(100,150)scale(10)")
// 		.transition()
// 			.delay(1500)
// 			.style("fill-opacity",0)
// 			.attr("transform","scale(0)")
// 			.remove()
// }

var xscale=d3.scaleLinear()
			.domain([-30,50])
			.range([0,300]);
var yscale=d3.scaleLinear()
			.domain([-30,40])
			.range([500,250]);

function draw_sensor_locations(parent, data,color) {
	parent.selectAll('circle').data(data).enter().append("circle")
			.attr("cx",d=>xscale(d[2]))
			.attr("cy",d=>yscale(d[3]))
			.attr("transform","matrix(1,0,0,0.5,0,0) rotate(-35)")
			.attr("r",5)
			.attr("stroke","none")
			.attr("fill",color);
}
vis1.selectAll('line').data(floormap_data).enter().append('line')
		.attr("x1",d=>xscale(d[0][0]))
		.attr('transform','matrix(1,0,0,0.5,0,0) rotate(-35)')
		.attr("y1",d=>yscale(d[0][1]))
		.attr("x2",d=>xscale(d[1][0]))
		.attr("y2",d=>yscale(d[1][1]))
		.attr("stroke-linecap","round");
draw_sensor_locations(vis1,fourth_floor_sensor_locations,"red");


vis2.selectAll('line').data(floormap_data).enter().append('line')
		.attr("x1",d=>xscale(d[0][0]))
		.attr('transform','matrix(1,0,0,0.5,0,0) rotate(-35)')
		.attr("y1",d=>yscale(d[0][1]))
		.attr("x2",d=>xscale(d[1][0]))
		.attr("y2",d=>yscale(d[1][1]))
		.attr("stroke-linecap","round");

draw_sensor_locations(vis2,third_floor_sensor_locations,"green");

vis3.selectAll('line').data(floormap_data).enter().append('line')
		.attr("x1",d=>xscale(d[0][0]))
		.attr('transform','matrix(1,0,0,0.5,0,0) rotate(-35)')
		.attr("y1",d=>yscale(d[0][1]))
		.attr("x2",d=>xscale(d[1][0]))
		.attr("y2",d=>yscale(d[1][1]))
		.attr("stroke-linecap","round");

draw_sensor_locations(vis3,second_floor_sensor_locations,"steelblue");

vis4.selectAll('line').data(floormap_data).enter().append('line')
		.attr("x1",d=>xscale(d[0][0]))
		.attr('transform','matrix(1,0,0,0.5,0,0) rotate(-35)')
		.attr("y1",d=>yscale(d[0][1]))
		.attr("x2",d=>xscale(d[1][0]))
		.attr("y2",d=>yscale(d[1][1]))
		.attr("stroke-linecap","round");

draw_sensor_locations(vis4,first_floor_sensor_locations,"grey");
// var xscale1=d3.scaleLinear()
// 			.domain([-30,50])
// 			.range([0,200]);
// var yscale1=d3.scaleLinear()
// 			.domain([-30,40])
// 			.range([480,330]);
// vis1.selectAll('line').data(floormap_data2).enter().append('line')
// 		.attr("x1",d=>xscale1(d[0][0]))
// 		.attr('transform','matrix(1,0,0,0.7,0,0) rotate(-35)')
// 		.attr("y1",d=>yscale1(d[0][1]))
// 		.attr("x2",d=>xscale1(d[1][0]))
// 		.attr("y2",d=>yscale1(d[1][1]))
// 		.attr("stroke-linecap","round");







